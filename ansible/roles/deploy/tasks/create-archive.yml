- name: Create archive - Set git clone facts
  set_fact:
    local_git_clone_dir: "/tmp/ansible-pull-request-deploy-{{ commit_hash }}"

- name: Create archive - Remove clone dir
  local_action: command rm -rf {{ local_git_clone_dir }}

- name: Create archive - Create git clone of this project
  local_action: shell git clone "{{ inventory_dir }}/../../" "{{ local_git_clone_dir }}" && cd "{{ local_git_clone_dir }}" && git checkout {{ commit_hash }}

- name: Install project dependencies
  local_action: shell cd "{{ local_git_clone_dir }}" && composer install --prefer-dist --optimize-autoloader --no-interaction --ignore-platform-reqs

- name: Create archive - Set archive name
  set_fact:
    archive_name: ansible-pull-request-deploy-{{ commit_hash }}.tar.gz

- name: Create archive - Set local archive path
  set_fact:
    local_archive_path: "/tmp/{{ archive_name }}"

- name: Copy excludes file (without debugging)
  set_fact:
    tar_exclude_file: "{{ inventory_dir }}/../roles/deploy/files/debugging-disabled"
  when: (deploy_env == "prod") or (deploy_env == "accept")

- name: Copy excludes file (with debugging)
  set_fact:
    tar_exclude_file: "{{ inventory_dir }}/../roles/deploy/files/debugging-enabled"
  when: (deploy_env != "prod") and (deploy_env != "accept")

- name: Create archive - Add files to archive
  run_once: true
  local_action: shell cd {{ local_git_clone_dir }} && tar --exclude-from={{ tar_exclude_file }} -czf {{ local_archive_path }} src vendor public app var bin
